[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "Audio_emotion_Recognition"
version = "0.1.0"
description = ""
requires-python = "==3.9.13"
dependencies = [
    "datasets>=3.4.1",
    "librosa>=0.11.0",
    "soundfile>=0.13.1",
    "requests>=2.32.3",
    "ruff>=0.11.0",
    "torch>=2.6.0",
    "torchvision>=0.21.0",
    "torchaudio>=2.6.0",
    "matplotlib>=3.9.4",
    "seaborn>=0.13.2",
    "numpy==1.23.5",
    "ipython>=8.18.1",
    "pandas>=2.2.3",
    "ipykernel>=6.29.5",
    "plotly>=6.0.1",
    "jupyter>=1.1.1",
    "optuna>=4.3.0",
    "shap>=0.47.2",
    "mlflow>=2.22.0",
    "onnx>=1.17.0",
    "onnxruntime>=1.19.2",
    "onnxsim>=0.4.36",
    "onnxoptimizer>=0.3.13",
    "lime>=0.2.0.1",
]

[tool.setuptools]
package-dir = {"" = "src"}

[project.optional-dependencies]
# Zależności używane tylko do rozwoju (linting, testy itp.)
dev = [
    "ruff>=0.11.0",
    "ipykernel>=6.29.5",
]

# Zależności związane z przetwarzaniem audio
audio = [
    "librosa>=0.11.0",
    "soundfile>=0.13.1",
    "soxr>=0.5.0.post1",
]

# Zależności związane z przetwarzaniem danych
data = [
    "datasets>=3.4.1",
    "scikit-learn>=1.6.1",
    "scipy>=1.13.1",
]

[dependency-groups]

dev = [
    "ipykernel>=6.29.5",
]

[tool.ruff]
# Wsparcie dla Python 3.8+
target-version = "py38"

# Długość linii - zwiększona dla lepszej czytelności polskich komentarzy
line-length = 120

# Katalogi do sprawdzania
include = ["src/**/*.py", "*.py"]

# Katalogi do pomijania
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    ".pytest_cache",
    "build",
    "dist",
    "*.egg-info",
    ".ipynb_checkpoints",
]

[tool.ruff.lint]
# Wszystkie reguły do sprawdzania
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "SIM",  # flake8-simplify
    "RUF",  # Ruff-specific rules
]

# Reguły do ignorowania (dla notebooków)
ignore = [
    "E402",  # Module level import not at top of file (typowe w notebookach)
    "F401",  # Imported but unused (czasem przydatne w notebookach)
    "E722",  # Do not use bare except (czasem OK w prototypach)
    "N806",  # Variable name should be lowercase (dla zmiennych jak X, y)
    "N812",  # Lowercase imported as non-lowercase (popularna konwencja F dla torch.nn.functional)
    "B008",  # Do not perform function calls in argument defaults
]

# Reguły do naprawiania automatycznie
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
# Specjalne reguły dla notebooków
"**/*.ipynb" = ["E402", "F401", "T201", "E701"]
# Specjalne reguły dla plików testowych
"**/test_*.py" = ["S101"]  # Allow asserts in tests

[tool.ruff.format]
# Formatowanie zgodne z Black
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
# Ustawienia sortowania importów
known-first-party = ["src"]
split-on-trailing-comma = true
